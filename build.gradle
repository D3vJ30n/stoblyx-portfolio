plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.9'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.j30n'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    asciidoctorExt
}

repositories {
    mavenCentral()
}

ext {
    snippetsDir = file('build/generated-snippets')
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-hateoas'

    // XSS 방지를 위한 Lucy-XSS-Filter 추가
    implementation 'com.navercorp.lucy:lucy-xss-servlet:2.0.1'
    implementation 'com.navercorp.lucy:lucy-xss:1.6.3'
    implementation 'javax.servlet:javax.servlet-api:4.0.1'

    // JSR-305 for annotations
    implementation 'com.google.code.findbugs:jsr305:3.0.2'

    // Annotations
    implementation 'org.jetbrains:annotations:24.0.0'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // Database
    runtimeOnly 'com.mysql:mysql-connector-j'

    // Test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.h2database:h2'

    // Spring REST Docs
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    // Lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    testRuntimeOnly 'com.h2database:h2'

    implementation 'net.sf.sociaal:freetts:1.2.2'

    // 환경변수 로드를 위한 의존성 추가
    implementation 'me.paulschwarz:spring-dotenv:2.5.4'

    // 캐싱을 위한 Caffeine 캐시 추가
    implementation 'com.github.ben-manes.caffeine:caffeine'

    // 서블릿 API 의존성 추가
    implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'
}

testing {
    suites {
        test {
            useJUnitJupiter('5.10.1')
        }
    }
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

tasks.withType(JavaExec) {
    jvmArgs += [
            '--add-opens', 'java.base/sun.nio.ch=ALL-UNNAMED',
            '--add-opens', 'java.base/java.io=ALL-UNNAMED'
    ]
}
