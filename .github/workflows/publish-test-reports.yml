name: 테스트-보고서-게시

on:
  workflow_run:
    workflows: ["API-테스트-자동화"]
    types:
      - completed

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  publish:
    name: 테스트 보고서 게시
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event.workflow_run.conclusion == 'failure' }}

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - name: 아티팩트 다운로드
        uses: actions/download-artifact@v3
        with:
          name: test-artifacts
          path: artifacts
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}

      - name: 아티팩트 내용 확인
        run: |
          echo "=== 다운로드된 아티팩트 내용 ==="
          find artifacts -type f | sort

      - name: 보고서 디렉토리 설정
        run: |
          mkdir -p reports

          # 테스트 보고서 복사
          if [ -d "artifacts/test-reports" ]; then
            mkdir -p reports/unit-tests
            cp -r artifacts/test-reports/* reports/unit-tests/
          fi

          # 커버리지 보고서 복사
          if [ -d "artifacts/coverage-reports" ]; then
            mkdir -p reports/coverage
            cp -r artifacts/coverage-reports/* reports/coverage/
          fi

          # 테스트 결과 XML 복사
          if [ -d "artifacts/test-results" ]; then
            mkdir -p reports/test-results
            cp -r artifacts/test-results/* reports/test-results/
          fi

      - name: 인덱스 페이지 생성
        run: |
          cat > reports/index.html << 'EOF'
          <!DOCTYPE html>
          <html lang="ko">
          <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Stoblyx 테스트 보고서</title>
            <style>
              body {
                font-family: 'Noto Sans KR', sans-serif;
                line-height: 1.6;
                color: #333;
                max-width: 1200px;
                margin: 0 auto;
                padding: 20px;
              }
              h1 {
                color: #2c3e50;
                border-bottom: 2px solid #3498db;
                padding-bottom: 10px;
              }
              .report-section {
                margin-bottom: 30px;
                background-color: #f9f9f9;
                border-radius: 5px;
                padding: 20px;
                box-shadow: 0 2px 5px rgba(0,0,0,0.1);
              }
              h2 {
                color: #2980b9;
              }
              a {
                display: inline-block;
                margin: 10px 0;
                padding: 10px 15px;
                background-color: #3498db;
                color: white;
                text-decoration: none;
                border-radius: 4px;
                transition: background-color 0.3s;
              }
              a:hover {
                background-color: #2980b9;
              }
              .timestamp {
                font-size: 0.9em;
                color: #7f8c8d;
                margin-top: 20px;
              }
              .status {
                display: inline-block;
                padding: 5px 10px;
                border-radius: 3px;
                font-weight: bold;
              }
              .success {
                background-color: #2ecc71;
                color: white;
              }
              .failure {
                background-color: #e74c3c;
                color: white;
              }
            </style>
          </head>
          <body>
            <h1>Stoblyx 테스트 보고서</h1>
            
            <div class="report-section">
              <h2>단위 테스트 보고서</h2>
              <p>Spring Boot 애플리케이션의 단위 테스트 결과입니다.</p>
              <a href="./unit-tests/index.html">단위 테스트 보고서 보기</a>
            </div>
            
            <div class="report-section">
              <h2>코드 커버리지 보고서</h2>
              <p>JaCoCo를 사용한 코드 커버리지 분석 결과입니다.</p>
              <a href="./coverage/index.html">커버리지 보고서 보기</a>
            </div>
            
            <div class="report-section">
              <h2>테스트 결과 XML</h2>
              <p>JUnit 테스트 결과 XML 파일입니다.</p>
              <a href="./test-results/">테스트 결과 XML 보기</a>
            </div>
            
            <div class="timestamp">
              마지막 업데이트: <span id="timestamp"></span>
            </div>
            
            <script>
              document.getElementById('timestamp').textContent = new Date().toLocaleString('ko-KR', {
                year: 'numeric',
                month: 'long',
                day: 'numeric',
                hour: '2-digit',
                minute: '2-digit',
                second: '2-digit'
              });
            </script>
          </body>
          </html>
          EOF

      - name: GitHub Pages 설정
        uses: actions/configure-pages@v3

      - name: 보고서 업로드
        uses: actions/upload-pages-artifact@v2
        with:
          path: reports

      - name: GitHub Pages 배포
        id: deployment
        uses: actions/deploy-pages@v2
