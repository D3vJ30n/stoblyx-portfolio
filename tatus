[1mdiff --git a/.github/workflows/cr.yml b/.github/workflows/cr.yml[m
[1mnew file mode 100644[m
[1mindex 00000000..b64c418e[m
[1m--- /dev/null[m
[1m+++ b/.github/workflows/cr.yml[m
[36m@@ -0,0 +1,20 @@[m
[32m+[m[32mname: Code Review[m
[32m+[m
[32m+[m[32mpermissions:[m
[32m+[m[32m  contents: read[m
[32m+[m[32m  pull-requests: write[m
[32m+[m
[32m+[m[32mon:[m
[32m+[m[32m  pull_request:[m
[32m+[m[32m    types: [ opened, synchronize ][m
[32m+[m
[32m+[m[32mjobs:[m
[32m+[m[32m  code-review:[m
[32m+[m[32m    runs-on: ubuntu-latest[m
[32m+[m[32m    steps:[m
[32m+[m[32m      - uses: anc95/ChatGPT-CodeReview@main[m
[32m+[m[32m        env:[m
[32m+[m[32m          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}[m
[32m+[m[32m          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}[m
[32m+[m[32m          LANGUAGE: Korean[m
[32m+[m[32m          MODEL: gpt-3.5-turbo[m
[1mdiff --git a/LICENSE.md b/LICENSE.md[m
[1mnew file mode 100644[m
[1mindex 00000000..8b8e5d7a[m
[1m--- /dev/null[m
[1m+++ b/LICENSE.md[m
[36m@@ -0,0 +1,16 @@[m
[32m+[m[32m# Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License (CC BY-NC-ND 4.0)[m
[32m+[m
[32m+[m[32mThis work is licensed under a [Creative Commons Attribution-NonCommercial-NoDerivatives 4.0 International License](http://creativecommons.org/licenses/by-nc-nd/4.0/).[m
[32m+[m
[32m+[m[32m## You are free to:[m
[32m+[m
[32m+[m[32m- **Share** — copy and redistribute the material in any medium or format[m
[32m+[m
[32m+[m[32m## Under the following terms:[m
[32m+[m
[32m+[m[32m- **Attribution** — You must give appropriate credit, provide a link to the license, and indicate if changes were made. You may do so in any reasonable manner, but not in any way that suggests the licensor endorses you or your use.[m
[32m+[m[32m- **NonCommercial** — You may not use the material for commercial purposes.[m
[32m+[m[32m- **NoDerivatives** — If you remix, transform, or build upon the material, you may not distribute the modified material.[m
[32m+[m[32m- **No additional restrictions** — You may not apply legal terms or technological measures that legally restrict others from doing anything the license permits.[m
[32m+[m
[32m+[m[32mThe full license text can be found at: [https://creativecommons.org/licenses/by-nc-nd/4.0/legalcode](https://creativecommons.org/licenses/by-nc-nd/4.0/legalcode)[m
[1mdiff --git a/gradle/wrapper/gradle-wrapper.jar b/gradle/wrapper/gradle-wrapper.jar[m
[1mnew file mode 100644[m
[1mindex 00000000..a4b76b95[m
Binary files /dev/null and b/gradle/wrapper/gradle-wrapper.jar differ
[1mdiff --git a/gradle/wrapper/gradle-wrapper.properties b/gradle/wrapper/gradle-wrapper.properties[m
[1mnew file mode 100644[m
[1mindex 00000000..e18bc253[m
[1m--- /dev/null[m
[1m+++ b/gradle/wrapper/gradle-wrapper.properties[m
[36m@@ -0,0 +1,7 @@[m
[32m+[m[32mdistributionBase=GRADLE_USER_HOME[m
[32m+[m[32mdistributionPath=wrapper/dists[m
[32m+[m[32mdistributionUrl=https\://services.gradle.org/distributions/gradle-8.12.1-bin.zip[m
[32m+[m[32mnetworkTimeout=10000[m
[32m+[m[32mvalidateDistributionUrl=true[m
[32m+[m[32mzipStoreBase=GRADLE_USER_HOME[m
[32m+[m[32mzipStorePath=wrapper/dists[m
[1mdiff --git a/src/main/java/com/j30n/stoblyx/adapter/in/web/controller/AdminRankingController.java b/src/main/java/com/j30n/stoblyx/adapter/in/web/controller/AdminRankingController.java[m
[1mindex 1e872c0b..c3345859 100644[m
[1m--- a/src/main/java/com/j30n/stoblyx/adapter/in/web/controller/AdminRankingController.java[m
[1m+++ b/src/main/java/com/j30n/stoblyx/adapter/in/web/controller/AdminRankingController.java[m
[36m@@ -8,7 +8,6 @@[m [mimport com.j30n.stoblyx.application.port.in.admin.AdminRankingUseCase;[m
 import com.j30n.stoblyx.common.response.ApiResponse;[m
 import jakarta.validation.Valid;[m
 import lombok.extern.slf4j.Slf4j;[m
[31m-import org.springframework.beans.factory.annotation.Autowired;[m
 import org.springframework.format.annotation.DateTimeFormat;[m
 import org.springframework.http.HttpStatus;[m
 import org.springframework.http.ResponseEntity;[m
[36m@@ -27,8 +26,14 @@[m [mimport java.util.List;[m
 @Slf4j[m
 public class AdminRankingController {[m
 [m
[31m-    @Autowired[m
[31m-    private AdminRankingUseCase adminRankingUseCase;[m
[32m+[m[32m    private static final String SUCCESS = "SUCCESS";[m
[32m+[m[32m    private static final String ERROR = "ERROR";[m
[32m+[m[41m    [m
[32m+[m[32m    private final AdminRankingUseCase adminRankingUseCase;[m
[32m+[m[41m    [m
[32m+[m[32m    public AdminRankingController(AdminRankingUseCase adminRankingUseCase) {[m
[32m+[m[32m        this.adminRankingUseCase = adminRankingUseCase;[m
[32m+[m[32m    }[m
 [m
     /**[m
      * 의심스러운 활동이 있는 사용자 목록 조회[m
[36m@@ -41,11 +46,11 @@[m [mpublic class AdminRankingController {[m
             @RequestParam(defaultValue = "100") int threshold) {[m
         try {[m
             List<AdminRankingScoreResponse> users = adminRankingUseCase.findUsersWithSuspiciousActivity(threshold);[m
[31m-            return ResponseEntity.ok(new ApiResponse<>("SUCCESS", "의심스러운 활동이 있는 사용자 목록을 조회했습니다.", users));[m
[32m+[m[32m            return ResponseEntity.ok(new ApiResponse<>(SUCCESS, "의심스러운 활동이 있는 사용자 목록을 조회했습니다.", users));[m
         } catch (Exception e) {[m
             log.error("의심스러운 활동이 있는 사용자 목록 조회 중 오류 발생", e);[m
             return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)[m
[31m-                    .body(new ApiResponse<>("ERROR", "의심스러운 활동이 있는 사용자 목록 조회 중 오류가 발생했습니다.", null));[m
[32m+[m[32m                    .body(new ApiResponse<>(ERROR, "의심스러운 활동이 있는 사용자 목록 조회 중 오류가 발생했습니다.", null));[m
         }[m
     }[m
 [m
[36m@@ -65,11 +70,11 @@[m [mpublic class AdminRankingController {[m
         try {[m
             List<AdminRankingActivityResponse> activities = adminRankingUseCase.findAbnormalActivityPatterns([m
                     startDate, endDate, activityThreshold);[m
[31m-            return ResponseEntity.ok(new ApiResponse<>("SUCCESS", "비정상적인 활동 패턴 목록을 조회했습니다.", activities));[m
[32m+[m[32m            return ResponseEntity.ok(new ApiResponse<>(SUCCESS, "비정상적인 활동 패턴을 조회했습니다.", activities));[m
         } catch (Exception e) {[m
[31m-            log.error("비정상적인 활동 패턴 목록 조회 중 오류 발생", e);[m
[32m+[m[32m            log.error("비정상적인 활동 패턴 조회 중 오류 발생", e);[m
             return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)[m
[31m-                    .body(new ApiResponse<>("ERROR", "비정상적인 활동 패턴 목록 조회 중 오류가 발생했습니다.", null));[m
[32m+[m[32m                    .body(new ApiResponse<>(ERROR, "비정상적인 활동 패턴 조회 중 오류가 발생했습니다.", null));[m
         }[m
     }[m
 [m
[36m@@ -89,11 +94,11 @@[m [mpublic class AdminRankingController {[m
         try {[m
             List<AdminRankingActivityResponse> activities = adminRankingUseCase.findActivitiesByIpAddress([m
                     ipAddress, startDate, endDate);[m
[31m-            return ResponseEntity.ok(new ApiResponse<>("SUCCESS", "IP 주소별 활동 내역을 조회했습니다.", activities));[m
[32m+[m[32m            return ResponseEntity.ok(new ApiResponse<>(SUCCESS, "IP 주소별 활동 내역을 조회했습니다.", activities));[m
         } catch (Exception e) {[m
             log.error("IP 주소별 활동 내역 조회 중 오류 발생", e);[m
             return ResponseEntity.status(HttpStatus.INTERNAL_SERVER_ERROR)[m
[31m-                    .body(new ApiResponse<>("E